/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Entidades.USUARIO_SESION;
import Negocio.NEGOCIO_OBJETOS;
import Negocio.NEGOCIO_SESIONES;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author danny
 */
public class AdministrarPermisosGestor extends javax.swing.JFrame {

    /**
     * Creates new form AdministrarPermisosGestor
     */
     ArrayList<String> attSeleccionados;
    ArrayList<String> condSeleccionados;
    
    public AdministrarPermisosGestor() {
         try {
             initComponents();
             NEGOCIO_SESIONES.getInstance().IniciarSesion("SUPERVISOR", "123");
             this.listaTablas.setVisible(false);
             this.Tabla.addItem("");
             ArrayList<String> nombres  = NEGOCIO_OBJETOS.getInstance().getUsuariosSQL();
             for(int i = 0; i<nombres.size(); i++){
                 if(!nombres.get(i).isEmpty() && !nombres.get(i).equals(USUARIO_SESION.getInstance().getUsername()))
                     this.Tabla.addItem(nombres.get(i));
             }
             
             this.listaTablas.addItem("");
             ArrayList<String> tablas  = NEGOCIO_OBJETOS.getInstance().getNombresTablas();
             for(int i = 0; i<tablas.size(); i++){
                 if(!tablas.get(i).isEmpty())
                     this.listaTablas.addItem(tablas.get(i));
             }
         } catch (Exception ex) {
             Logger.getLogger(AdministrarPermisosGestor.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Tabla = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        listaOpciones = new javax.swing.JComboBox<>();
        listaTablas = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPrivilegios = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnQuitar1 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nombre del Usuario");

        Tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TablaActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Agregar Privilegio");

        listaOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "ALL PRIVILEGES", "SELECT", "INSERT", "UPDATE", "DELETE" }));
        listaOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaOpcionesMouseClicked(evt);
            }
        });
        listaOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaOpcionesActionPerformed(evt);
            }
        });

        listaTablas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaTablasMouseClicked(evt);
            }
        });
        listaTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaTablasActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar >>");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Privilegios del usuario");

        listPrivilegios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPrivilegiosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listPrivilegios);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CONFIGURACION DE PERMISOS USUARIOS");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Objetos");

        btnQuitar1.setText("Quitar <<");
        btnQuitar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitar1ActionPerformed(evt);
            }
        });

        btnCancelar.setText("Aceptar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Tabla, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(listaOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(94, 94, 94)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(listaTablas, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnQuitar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(68, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel2)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listaTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuitar1)))
                .addGap(33, 33, 33)
                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(146, 146, 146))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TablaActionPerformed

        try {
            this.btnAgregar.setEnabled(false);
            this.listaTablas.setVisible(false);
            this.listPrivilegios.setModel(new DefaultListModel());
//            if(!this.Tabla.getSelectedItem().toString().isEmpty()){
//                ArrayList<String> privilegios = (ArrayList<String>) NEGOCIO_OBJETOS.getInstance().getPrivilegios(this.Tabla.getSelectedItem());
//                System.out.println(privilegios.toString());
//                DefaultListModel model = new DefaultListModel();
//
//                for(int i=0; i<privilegios.size(); i++){
//                    model.addElement(privilegios.get(i));
//                }
//                this.listPrivilegios.setModel(model);
//
//               // this.boxPrivilegios.setVisible(true);
//               // this.boxCondiciones.setVisible(true);
//                this.btnAgregar.setEnabled(false);
//                this.btnQuitar1.setEnabled(false);
//            }
//            else{
//               // this.boxPrivilegios.setVisible(false);
//               // this.boxCondiciones.setVisible(false);
//            }
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
           // this.boxCondiciones.setVisible(false);
           // this.boxPrivilegios.setVisible(false);
        }
    }//GEN-LAST:event_TablaActionPerformed

    private void listaOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaOpcionesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaOpcionesMouseClicked

    private void listaOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaOpcionesActionPerformed
        this.btnAgregar.setEnabled(true);
        if(this.listaOpciones.getSelectedItem().toString().isEmpty()){
            this.listaTablas.setVisible(false);
        }
        else if(!this.listaOpciones.getSelectedItem().toString().equals("")){
            this.listaTablas.setVisible(true);
        }
        else
        this.listaTablas.setVisible(false);
    }//GEN-LAST:event_listaOpcionesActionPerformed

    private void listaTablasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaTablasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaTablasMouseClicked

    private void listaTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaTablasActionPerformed
        this.btnAgregar.setEnabled(true);
    }//GEN-LAST:event_listaTablasActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if(this.listaOpciones.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Seleccione el privilegio a agregar. ", "Aviso", JOptionPane.ERROR_MESSAGE);
        }
        else if(this.listaOpciones.getSelectedItem().toString().equals("ALL PRIVILEGES")){
            try {
                NEGOCIO_OBJETOS.getInstance().asignarTodosPrivilegios(this.Tabla.getSelectedItem().toString());
                JOptionPane.showMessageDialog(rootPane,"Se han asignado todos los privilegios satisfactoriamente.","Enhorabuena",JOptionPane.INFORMATION_MESSAGE);
                ArrayList<String> privilegios = (ArrayList<String>) NEGOCIO_OBJETOS.getInstance().getPrivilegios(this.Tabla.getSelectedItem());

                DefaultListModel model = new DefaultListModel();

                for(int i=0; i<privilegios.size(); i++){
                    model.addElement(privilegios.get(i));
                }
                this.listPrivilegios.setModel(model);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            this.btnAgregar.setEnabled(false);
            try {
                ArrayList<String> o = new ArrayList();
                o.add(this.Tabla.getSelectedItem().toString());
                o.add(this.listaOpciones.getSelectedItem().toString());
                o.add(this.listaTablas.getSelectedItem().toString());
                NEGOCIO_OBJETOS.getInstance().agregarPrivilegio(o);
                JOptionPane.showMessageDialog(rootPane,"Se ha insertado el privilegio satisfactoriamente.","Enhorabuena",JOptionPane.INFORMATION_MESSAGE);
                /*  cambio realisado para mostrar los privilegios ya que no me muestra lo que quiero */
//                ArrayList<String> privilegios = (ArrayList<String>) NEGOCIO_OBJETOS.getInstance().getPrivilegios(this.Tabla.getSelectedItem());
//
//                DefaultListModel model = new DefaultListModel();
//
//                for(int i=0; i<privilegios.size(); i++){
//                    model.addElement(privilegios.get(i));
//                }
//                this.listPrivilegios.setModel(model);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void listPrivilegiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPrivilegiosMouseClicked
        this.btnQuitar1.setEnabled(true);
    }//GEN-LAST:event_listPrivilegiosMouseClicked

    private void btnQuitar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitar1ActionPerformed
        try {
            String nombre = this.listPrivilegios.getModel().getElementAt(this.listPrivilegios.getSelectedIndex());
            this.btnQuitar1.setEnabled(false);
            if(!nombre.isEmpty()){
                ArrayList<String> o = new ArrayList();
                o.add(this.Tabla.getSelectedItem().toString());
                o.add(nombre);
                NEGOCIO_OBJETOS.getInstance().removerPrivilegio(o);
                JOptionPane.showMessageDialog(rootPane,"Se ha removido el privilegio satisfactoriamente.","Enhorabuena",JOptionPane.INFORMATION_MESSAGE);
                ArrayList<String> privilegios = (ArrayList<String>) NEGOCIO_OBJETOS.getInstance().getPrivilegios(this.Tabla.getSelectedItem());
                DefaultListModel model = new DefaultListModel();
                for(int i=0; i<privilegios.size(); i++){
                    model.addElement(privilegios.get(i));
                }
                this.listPrivilegios.setModel(model);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnQuitar1ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarPermisosGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarPermisosGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarPermisosGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarPermisosGestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarPermisosGestor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Tabla;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnQuitar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listPrivilegios;
    private javax.swing.JComboBox<String> listaOpciones;
    private javax.swing.JComboBox<String> listaTablas;
    // End of variables declaration//GEN-END:variables
}
